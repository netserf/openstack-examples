heat_template_version: '2018-08-31'

description: An template that creates both a network and VM.

parameters:
  key_name:
    type: string
    description: Name of key-pair to be used for compute instance
  image_name:
    type: string
    description: Image to be used for compute instance
  instance_flavor:
    type: string
    description: Type of instance (flavor) to be used
  public_net:
     type: string
     description: Public network ID

resources:
  private_net:
    type: OS::Neutron::Net
    properties:
      name: private-net

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net }
      cidr: 192.168.1.0/24
      gateway_ip: 192.168.1.1

  router1:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }

  router1_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router1 }
      subnet_id: { get_resource: private_subnet }

  host_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  host_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource: host_port }

  my_host:
    type: OS::Nova::Server
    properties:
      name: my_host
      key_name: { get_param: key_name }
      image: { get_param: image_name }
      flavor: { get_param: instance_flavor }
      networks:
        - port: { get_resource: host_port }

outputs:
  host_private_ip:
     description: Private IP address of my_host
     value: { get_attr: [ my_host, first_address ] }
  host_public_ip:
        description: Floating IP address of my_host
        value: { get_attr: [ host_floating_ip, floating_ip_address ] }

